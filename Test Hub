local Players = game:GetService("Players")
local player = Players.LocalPlayer
local deathPosition = nil
local animationId = "rbxassetid://15507138928"
local isActive = false -- Flag to control the script's execution

local function stopAllAnimations(humanoid)
    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
end

local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    
    humanoid.HealthChanged:Connect(function(health)
        if health <= 0 then
            deathPosition = character:WaitForChild("HumanoidRootPart").Position
            if isActive then -- Check if the script is active
                -- Move the character to the death position and play the animation
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                humanoidRootPart.CFrame = CFrame.new(deathPosition)
                stopAllAnimations(humanoid)
                task.wait()

                local animation = Instance.new("Animation")
                animation.AnimationId = animationId
                local animationTrack = humanoid:LoadAnimation(animation)
                animationTrack:Play()

                -- Chat messages
                local chatService = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents")
                
                local function sendMessage(message)
                    chatService:WaitForChild("SayMessageRequest"):FireServer(message, "All")
                end

                sendMessage("I FINALLY GRASPED IT ON THE VERGE OF DEATH!")
                task.wait(2)
                sendMessage("THE TRUE ESSENCE FOR CURSED ENERGY!!")

                task.wait(3)
                animationTrack:Stop()
                deathPosition = nil  
            end
        end
    end)
end

player.CharacterAdded:Connect(onCharacterAdded)

if player.Character then
    onCharacterAdded(player.Character)
end

-- Function to enable or disable the script
local function setActive(active)
    isActive = active
end

return setActive -- Return the function to control activation
