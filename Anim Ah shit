local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Function to set tool names in the hotbar
local function updateToolNames()
    -- Retry mechanism with a delay if hotbar, backpack, or hotbarFrame does not exist
    local hotbar = playerGui:FindFirstChild("Hotbar")
    if not hotbar then
        task.delay(0, updateToolNames)  -- Retry after 1 second
        return
    end

    local backpack = hotbar:FindFirstChild("Backpack")
    if not backpack then
        task.delay(0, updateToolNames)
        return
    end

    local hotbarFrame = backpack:FindFirstChild("Hotbar")
    if not hotbarFrame then
        task.delay(0, updateToolNames)
        return
    end

    -- Loop through the buttons in the hotbar (assuming there are 4 buttons: 1, 2, 3, 4)
    for i = 1, 4 do
        local baseButton = hotbarFrame:FindFirstChild(tostring(i))
        if baseButton then
            local base = baseButton:FindFirstChild("Base")
            if base then
                local ToolName = base:FindFirstChild("ToolName")
                if ToolName then
                    -- Set the Tool Name text dynamically
                    if i == 1 then
                        ToolName.Text = "Doom's"  -- Replace with the name of the first move
                    elseif i == 2 then
                        ToolName.Text = "Native Punch"  -- Replace with the name of the second move
                    elseif i == 3 then
                        ToolName.Text = "Heaven's"  -- Replace with the name of the third move
                    elseif i == 4 then
                        ToolName.Text = "Flew Away"  -- Replace with the name of the fourth move
                    end
                end
            end
        end
    end
end

-- Initial call to update tool names
updateToolNames()

-- Function to refresh tool names whenever tools change in the backpack
local function refreshToolNamesOnBackpackChange()
    updateToolNames()
end

-- Connect events to refresh tool names when the backpack changes
local backpack = player:WaitForChild("Backpack")
backpack.ChildRemoved:Connect(refreshToolNamesOnBackpackChange)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")

local randomUlt = {
    "Rapsody",
    "Infinite Potential",
    "Faraway",
    "ALPHA - OMEGA",
    "神よ"
}

local hasRandomized = false

local function getRandomUlt()
    return randomUlt[math.random(1, #randomUlt)]
end

local function findGuiAndSetText()

    if hasRandomized then
        return
    end

    local screenGui = playerGui:FindFirstChild("ScreenGui")

    if screenGui then

        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")

        if magicHealthFrame then

            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")

            if textLabel then

                textLabel.Text = getRandomUlt() -- put the name of the ult name ultimate text

                hasRandomized = true

            end

        end

    end

end

-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

-- Local Player
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Duration for the color change
local duration = 5  -- Time in seconds for one color transition (red -> blue or blue -> red)

-- Function to smoothly change the color of the bar
local function updateBarColor()
    -- Find the ScreenGui on the screen
    local screenGui = playerGui:FindFirstChild("ScreenGui")
    if not screenGui then return end

    -- Find the MagicHealth Frame
    local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")
    if not magicHealthFrame then return end

    -- Find the Health Frame
    local healthFrame = magicHealthFrame:FindFirstChild("Health")
    if not healthFrame then return end

    -- Find the Bar Frame
    local barFrame = healthFrame:FindFirstChild("Bar")
    if not barFrame then return end

    -- Find the ImageLabel with ImageColor3 property inside the Bar Frame
    local imageLabel = barFrame:FindFirstChildWhichIsA("ImageLabel")  -- Use FindFirstChildWhichIsA for type-safe search
    if not imageLabel then return end

    -- Color transition targets (Dark Red -> Blue and Blue -> Dark Red)
    imageLabel.ImageColor3 = Color3.fromRGB(20, 20, 20)
    local darkRed = Color3.fromRGB(20, 20, 20)  -- Dark Red
    local blue = Color3.fromRGB(100, 100, 100)     -- Blue

    -- Tween info for smooth transition
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true, 0)

    -- Tween the color to transition smoothly back and forth between dark red and blue
    local goalColorToBlue = {ImageColor3 = blue}  -- Target color is blue
    local tweenToBlue = TweenService:Create(imageLabel, tweenInfo, goalColorToBlue)

    -- Reverse tween to dark red
    local goalColorToDarkRed = {ImageColor3 = darkRed}  -- Target color is dark red
    local tweenToDarkRed = TweenService:Create(imageLabel, tweenInfo, goalColorToDarkRed)

    -- Play the tweens in sequence, alternating colors
    tweenToBlue:Play()
    tweenToBlue.Completed:Connect(function()
        tweenToDarkRed:Play()
    end)

    tweenToDarkRed.Completed:Connect(function()
        tweenToBlue:Play()  -- Continue the loop by playing the blue tween after dark red
    end)
end

-- Check the GUI again when the character resets
local function onCharacterAdded(character)
    -- Update the GUI
    updateBarColor()
end

-- Check the local player's character
local function onPlayerAdded()
    local character = player.Character or player.CharacterAdded:Wait()
    onCharacterAdded(character)

    -- Check again when the character changes
    player.CharacterAdded:Connect(onCharacterAdded)
end

-- Check when the player is added
Players.PlayerAdded:Connect(onPlayerAdded)
if player then
    onPlayerAdded()
end

-- move 1

playerGui.DescendantAdded:Connect(findGuiAndSetText)

findGuiAndSetText()


local animationId = 10468665991 -- the anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13603396939" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1.8 -- speed for specific


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)

local Duarr = Game.ReplicatedStorage.Resources.CrabBeam["Blaswwwt"].dashpunch.Attachment:Clone()

Duarr.Parent = game.Players.LocalPlayer.Character["Torso"]
for _, child in ipairs(Duarr:GetChildren()) do
    if child:IsA("ParticleEmitter") then
    child.Color = ColorSequence.new(Color3.fromRGB(111, 111, 111)) -- Set color to stuff
        child:Emit(3) -- Emit STUFF particle
    end
end


local Red = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 11, 11)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(111, 111, 111))
    }

local Burst = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.Attachment:Clone()
Burst.Parent = game.Players.LocalPlayer.Character["Right Arm"]
for _, child in ipairs(Burst:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = Red
        child:Emit(3) -- Emit 20 particles
    end
end

local Black = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), -- White
    ColorSequenceKeypoint.new(1, Color3.fromRGB(11, 11, 11))     -- Near Black
}

-- Attach VFX to both arms
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local arms = {"Right Arm", "Left Arm"}

for _, armName in ipairs(arms) do
    local arm = character:FindFirstChild(armName)
    if arm then
        local VfxMv = game.ReplicatedStorage.Resources.FiveSeasonsFX.CharFX.ArmFX:Clone()
        VfxMv.Parent = arm
        
        -- Set color and emit particles for each particle emitter in the VFX
        for _, child in ipairs(VfxMv:GetChildren()) do
            if child:IsA("ParticleEmitter") then
                child.Color = Black
                child:Emit(0.5) -- Emit particles
            end
        end

        -- Destroy VFX after 1 second delay
        task.delay(1.3, function()
            VfxMv:Destroy()
        end)
    end
end

    end

end

-- end of move 1

-- move 2
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10466974800 -- the move that it will track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12273188754" -- the specific move ur gonna replace

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)


    end

end

-- end of move 2

-- move 3

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10471336737 -- the anim that will track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13294790250" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.5 -- speed for specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


delay(1.8, function()

    Anim:Stop()

end)


    end

end

-- end of move 3

-- move 4

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12510170988 -- the specific anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18464372850" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 2 -- the speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of move 4

-- ult move 1
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 11343318134 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12983333733" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 2 -- speed for specific anim

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.5)


    end

end

-- end of ult move 1

-- wall combo

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 15955393872 -- the anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15943915877" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.05 -- speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of wall combo

-- serious punch

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 12983333733 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18897553669" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- speed of specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.2)

--[[ Anti Cutscenes Made by Intergrity on Discord]]--
local speaker = game.Players.LocalPlayer
workspace.CurrentCamera:remove()
repeat wait() until speaker.Character ~= nil
workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA('Humanoid')
workspace.CurrentCamera.CameraType = "Custom"
speaker.CameraMinZoomDistance = 0.5
speaker.CameraMaxZoomDistance = 400
speaker.CameraMode = "Classic"
speaker.Character.Head.Anchored = false

-- Make sure everything is properly initialized
humanoid.PlatformStand = true

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = game.Workspace.CurrentCamera
local humanoid = character:WaitForChild("Humanoid")

local bodyVelocity = Instance.new("BodyVelocity")
bodyVelocity.MaxForce = Vector3.new(2000000, 2000000, 2000000)
bodyVelocity.Velocity = Vector3.new(0, 2, 0)
bodyVelocity.Parent = humanoidRootPart

-- Create the BodyGyro to control the character's rotation
local SigmaGyro = Instance.new("BodyGyro")
SigmaGyro.MaxTorque = Vector3.new(400000, 400000, 400000)  -- High torque for smooth rotation
SigmaGyro.P = 100000  -- Proportional strength
SigmaGyro.D = 50    -- Damping for smooth rotation
SigmaGyro.CFrame = humanoidRootPart.CFrame  -- Start with current orientation
SigmaGyro.Parent = humanoidRootPart

-- Set PlatformStand to true to restrict player control during jump
humanoid.PlatformStand = true

-- Continuously update BodyGyro to match the camera's direction
game:GetService("RunService").Heartbeat:Connect(function()
    if humanoidRootPart and camera then
        local cameraLookVector = camera.CFrame.LookVector
        local targetLookVector = Vector3.new(cameraLookVector.X, cameraLookVector.Y, cameraLookVector.Z)

        if targetLookVector.Magnitude > 0 then
            local targetCFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + targetLookVector)
            SigmaGyro.CFrame = targetCFrame
        end
    end
end)
wait(6.5)
Anim:Stop()
SigmaGyro:Destroy()
bodyVelocity:Destroy()
Anim:Destroy()
humanoid.PlatformStand = false


   end

end
-- end of srs pnch

-- Table Flip
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 11365563255 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12342141464" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1 -- speed of specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.2)

local speaker = game.Players.LocalPlayer
workspace.CurrentCamera:remove()
repeat wait() until speaker.Character ~= nil
workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA('Humanoid')
workspace.CurrentCamera.CameraType = "Custom"
speaker.CameraMinZoomDistance = 0.5
speaker.CameraMaxZoomDistance = 400
speaker.CameraMode = "Classic"
speaker.Character.Head.Anchored = false


    end

end
-- End TF

-- ult anim

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12447707844 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18435303746" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)

    end

end

-- the end of ult anim

-- front dash

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://14046756619" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.7)


delay(1.2, function()

    Anim:Stop()

end)


    end

end

-- end of front dash

-- mini uppercut

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12342141464" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1.3 -- the speed for specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of mini upper cut

-- downslam

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242 -- the anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12684185971" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- the speed for specific anim


wait(0.2)

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of downslam

-- m1's
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")

-- the anim that will get track

local animationIdsToStop = {

    [10469493270] = true,

    [10469630950] = true,

    [10469639222] = true,

    [10469643643] = true,

}

-- the specific anim

local replacementAnimations = {

    ["10469643643"] = "rbxassetid://17889290569", -- 4th m1's dont change the [12345678910] change the rbxassetid://123..

    ["10469639222"] = "rbxassetid://17889471098",  -- 3rd m1's dont change the [12345678910] change the rbxassetid://123..

    ["10469630950"] = "rbxassetid://17889461810", -- 2nd m1's dont change the [12345678910] change the rbxassetid://123..

    ["10469493270"] = "rbxassetid://17889458563", -- 1st m1's dont change the [12345678910] change the rbxassetid://123..

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end
    
    -- end of m1s
    
    -- ignore

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end)

--[[ ult name changer made by Owner of Aztech ]]
-- // DEATH COUNTER //
local player = game.Players.LocalPlayer

local function detectAndRenameTool()
    local tool = player.Backpack:FindFirstChild("Death Counter") or player.Character:FindFirstChild("Table Flip")

    if tool then
        tool.Name = "Heavenly Counter" -- Change the ult name
    end
end

player.CharacterAdded:Connect(function()
    task.wait(1)
    detectAndRenameTool()
end)

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == "Death Counter" then
        detectAndRenameTool()
    end
end)

detectAndRenameTool()

-- // SERIOUS PUNCH //
local player = game.Players.LocalPlayer

local function detectAndRenameTool()
    local tool = player.Backpack:FindFirstChild("Serious Punch") or player.Character:FindFirstChild("Table Flip")

    if tool then
        tool.Name = "Rapsody\n(Fly)" -- Change the ult name
    end
end

player.CharacterAdded:Connect(function()
    task.wait(1)
    detectAndRenameTool()
end)

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == "Serious Punch" then
        detectAndRenameTool()
    end
end)

detectAndRenameTool()

-- // TABLE FLIP //
local player = game.Players.LocalPlayer

local function detectAndRenameTool()
    local tool = player.Backpack:FindFirstChild("Table Flip") or player.Character:FindFirstChild("Table Flip")

    if tool then
        tool.Name = "Death" -- Change the ult name
    end
end

player.CharacterAdded:Connect(function()
    task.wait(1)
    detectAndRenameTool()
end)

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == "Table Flip" then
        detectAndRenameTool()
    end
end)

detectAndRenameTool()

-- // OMNI DIRECTIONAL PUNCH //
local player = game.Players.LocalPlayer

local function detectAndRenameTool()
    local tool = player.Backpack:FindFirstChild("Omni Directional Punch") or player.Character:FindFirstChild("Table Flip")

    if tool then
        tool.Name = "Unlimited Power" -- Change the ult name
    end
end

player.CharacterAdded:Connect(function()
    task.wait(1)
    detectAndRenameTool()
end)

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == "Omni Directional Punch" then
        detectAndRenameTool()
    end
end)

detectAndRenameTool()

local toolx7 = player.Backpack:FindFirstChild("Rapsody (Variant)")
if toolx7 then
    print("Tool found: ", toolx7)
end
